<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
      start-state="modem_process">

      <var name="selectionModem" class="ru.javabegin.training.vkt7.object_modem.SelectionModem"/>


      <view-state id="modem_process" view="customer_m_select.xhtml" >

            <on-render>
                  <evaluate expression="facade_customer.findAllCustomers()" result="viewScope.cu"  />
            </on-render>
            <transition on="back" to="back"/>
            <transition on="next" to="case"/>



      </view-state>



      <view-state id="case" view="customer_m_case.xhtml" >

            <on-render>
                  <evaluate expression="facade_modem.searchCustomerById()" result="viewScope.cu"  />
            </on-render>
            <transition on="back" to="back"/>
            <transition on="action" to="action"/>


      </view-state>
      


      <action-state id="action">
            <evaluate expression="searchCriteria_modem.modem_operation" />
            <transition on="hour" to="modem_process" />
            <!--<transition on="no" to="resultIsFalseState" />-->
            <transition on="daily" to="daily" />
      </action-state>



      <view-state id="daily" view="customer_m_daily.xhtml" >

            <on-render>
                  <evaluate expression="facade_modem.searchCustomerById()" result="viewScope.cu"  />

            </on-render>


            <transition on="go_daily">
                  <evaluate expression="modemServiceImpl.get_daily_data(selectionModem.cust,selectionModem.day_of)" />
            </transition>

            <transition on="go_hour_all">
            <evaluate expression="modemServiceImpl.get_daily__hour_data(selectionModem.cust,selectionModem.day_of)" />
            <!--<evaluate expression="selectionModem.modem" />-->
      </transition>
            <transition on="go_daily_all_customer">
                  <evaluate expression="modemServiceImpl.get_daily_customer_data(selectionModem.cust,selectionModem.day_of)" />
                  <!--<evaluate expression="selectionModem.modem" />-->
            </transition>

            <transition on="stop">
                  <evaluate expression="modemServiceImpl.close_connect()" />
            </transition>



            <transition on="back" to="case"/>


            <transition on="begin" to="begin_daily"/>




      </view-state>

      <view-state id="begin_daily" view="process_m_daily.xhtml" >
            <on-render>
                  <evaluate expression="facade_modem.searchCustomerById()" result="viewScope.cu"  />
            </on-render>


            <transition on="save_customer" to="save_customer"/>
            <transition on="edit_customer" to="modem_process"/>

      </view-state>





      <action-state id="confirm">

            <evaluate expression="facade_customer.deleteCustomer()"  />
            <evaluate expression="selection.setCust(null)"/>
            <transition to="customer_deleted"/>
      </action-state>

      <view-state id="customer_deleted" view="customer_deleted.xhtml" >
            <transition on="back" to="modem_ready"/>

      </view-state>



      <action-state id="back">
            <evaluate expression="selection.setCust(null)"/>
            <transition to="modem_process"/>
      </action-state>

      <action-state id="save_customer">
            <evaluate expression="facade_customer.saveCustomer()"/>
            <transition to="modem_ready"/>
      </action-state>


      <end-state id="modem_ready"  />


      <global-transitions> <!-- Глобальный переход в случае отмены заказа -->

            <transition on="cancel" to="modem_ready" />
      </global-transitions>







</flow>
